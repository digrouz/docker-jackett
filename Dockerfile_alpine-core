# environment settings
ARG JACKETT_VERSION='0.21.166'
ARG JACKETT_ARCH='AMDx64'

# build jackett for musl
FROM mcr.microsoft.com/dotnet/sdk:6.0-alpine AS dotnet

ARG JACKETT_VERSION
ARG JACKETT_ARCH

ENV LANG='en_US.UTF-8' \
    LANGUAGE='en_US.UTF-8' \
    TERM='xterm' \
    JACKETT_VERSION="${JACKETT_VERSION}" \
    JACKETT_ARCH="${JACKETT_ARCH}"

RUN set -x && \
    cd /tmp && \
    wget -O- https://github.com/Jackett/Jackett/archive/refs/tags/v${JACKETT_VERSION}.tar.gz \
      | tar xz --strip-components=1 && \
    cd src && \
    dotnet publish Jackett.Server -f net6.0 --self-contained -c Release -r linux-musl-x64 /p:TrimUnusedDependencies=true /p:PublishTrimmed=true -o /out && \
    echo "**** cleanup ****" && \
    apk --no-cache add \
      binutils && \
    cd /out && \
    rm -f *.pdb && \
    chmod +x jackett && \
    strip -s /out/*.so

FROM digrouz/alpine-s6:latest
LABEL maintainer "DI GREGORIO Nicolas <nicolas.digregorio@gmail.com>"

ARG JACKETT_VERSION
ARG JACKETT_ARCH

### Environment variables
ENV LANG='en_US.UTF-8' \
    LANGUAGE='en_US.UTF-8' \
    TERM='xterm' \
    XDG_DATA_HOME='/config' \
    XDG_CONFIG_HOME='/config' \
    JACKETT_VERSION="${JACKETT_VERSION}" \
    JACKETT_ARCH="${JACKETT_ARCH}"
    
### Copy config files
COPY root/ /
COPY --from=dotnet /out /opt/Jackett

### Install Application
RUN set -x \
    apk upgrade --no-cache && \
    apk add --no-cache --virtual=build-deps \
      ca-certificates \
      curl \
    && \
    apk add --no-cache --virtual=run-deps \
      ca-certificates \
      gcompat \
      icu \
      libintl \
      sqlite-libs \
    && \
    echo "export XDG_CONFIG_HOME='${XDG_CONFIG_HOME}'" >> /etc/profile.d/docker-xdg.sh && \
    echo "${JACKETT_VERSION}-${JACKETT_ARCH}-digrouz" > /etc/docker-image && \
    chmod 0755 /opt/Jackett && \
    find /opt/Jackett -type d -exec chmod 0755 {} \; && \
    find /opt/Jackett -type f -exec chmod 0644 {} \; && \
    chmod 0755 /opt/Jackett/jackett && \
    apk del --no-cache --purge \
      build-deps  \
    && \
    rm -rf /tmp/* \
           /var/cache/apk/*  \
           /var/tmp/*

### Volume
Volume ["/config","/downloads"]

### Expose ports
Expose 9117

### Running User: not used, managed by docker-entrypoint.sh
#USER jackett

### Start jackett
ENTRYPOINT ["/init"]
